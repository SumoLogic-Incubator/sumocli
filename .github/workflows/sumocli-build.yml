name: Sumocli Build and Release

on:
  push:
    tags:
      - v*.*.*

jobs:
  create_github_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Set Version Variable
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\/}" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: false
    outputs:
      releaseurl: ${{ steps.create_release.outputs.upload_url }}

  build_docker_image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Run Docker Build
        run: |
          docker build --build-arg buildnumber=00001 --build-arg version=0.0.1 --tag sumocli-test .

  build_windows:
    name: Build Windows Binary
    needs: create_github_release
    runs-on: windows-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Setup Dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.x'
      - name: Set Version Variable
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\/}" >> $GITHUB_ENV
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Download Dependencies
        run: go mod download
      - name: Run Tests
        run: go test ./...
      - name: Build Binary
        run: ./scripts/build.sh -b "" -v "" -w
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_github_release.outputs.releaseurl }}
          asset_path: ./sumocli-windows-amd64.zip
          asset_name: sumocli-windows-amd64.zip
          asset_content_type: application/zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: sumocli-windows-amd64
          path: ./sumocli.exe

  build_linux:
    name: Build Linux Binary
    needs: create_github_release
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Set Version Variable
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\/}" >> $GITHUB_ENV
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Download Dependencies
        run: go mod download
      - name: Run Tests
        run: go test ./...
      - name: Build Sumocli
        shell: pwsh
        run: |
          $build = $Env:GITHUB_RUN_NUMBER
          $time = Get-Date
          go build -ldflags `
            "-X 'github.com/SumoLogic-Labs/sumocli/internal/build.Version=${{ env.TAG }}' `
            -X 'github.com/SumoLogic-Labs/sumocli/internal/build.Build=$build' `
            -X 'github.com/SumoLogic-Labs/sumocli/internal/build.Date=$time'" `
            ./cmd/sumocli
      - name: Zip Releases
        run: |
          zip -r sumocli-linux-amd64.zip sumocli
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_github_release.outputs.releaseurl }}
          asset_path: ./sumocli-linux-amd64.zip
          asset_name: sumocli-linux-amd64.zip
          asset_content_type: application/zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: sumocli-linux-amd64
          path: ./sumocli

  build_macos_intel:
    name: Build macOS Binary (Intel)
    needs: create_github_release
    runs-on: macos-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Set Version Variable
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\/}" >> $GITHUB_ENV
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Download Dependencies
        run: go mod download
      - name: Run Tests
        run: go test ./...
      - name: Build Sumocli
        shell: pwsh
        run: |
          $build = $Env:GITHUB_RUN_NUMBER
          $time = Get-Date
          go build -ldflags `
            "-X 'github.com/SumoLogic-Labs/sumocli/internal/build.Version=${{ env.TAG }}' `
            -X 'github.com/SumoLogic-Labs/sumocli/internal/build.Build=$build' `
            -X 'github.com/SumoLogic-Labs/sumocli/internal/build.Date=$time'" `
            ./cmd/sumocli
        env:
          GOOS: darwin
          GOARCH: amd64
      - name: Install gon
        shell: bash
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon
      - name: Sign and Notarize Binary
        shell: bash
        run: |
          # Install signing certificate
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          echo -n "$APPLE_DEV_CERT" | base64 --decode --output $CERTIFICATE_PATH
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
          security import $CERTIFICATE_PATH -P $APPLE_DEV_CERT_PASSWORD -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Sign macOS build
          gon -log-level=info -log-json .github/workflows/config.json
        env:
          APPLE_DEV_CERT: ${{ secrets.APPLE_DEV_CERT }}
          APPLE_DEV_CERT_PASSWORD: ${{ secrets.APPLE_DEV_CERT_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
      - name: Zip Releases
        run: |
          zip -r sumocli-macos-amd64.zip sumocli
      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_github_release.outputs.releaseurl }}
          asset_path: ./sumocli.zip
          asset_name: sumocli-macos-amd64.zip
          asset_content_type: application/zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: sumocli-macos-amd64
          path: ./sumocli


  build_macos_apple_silicon:
    name: Build macOS Binary (Apple Silicon)
    needs: create_github_release
    runs-on: macos-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Set Version Variable
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\/}" >> $GITHUB_ENV
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Download Dependencies
        run: go mod download
      - name: Run Tests
        run: go test ./...
      - name: Build Sumocli
        shell: bash
        run: |
          time=$(date)
          go build -ldflags \
            "-X 'github.com/SumoLogic-Labs/sumocli/internal/build.Version=${{ env.TAG }}' \
            -X 'github.com/SumoLogic-Labs/sumocli/internal/build.Build=$GITHUB_RUN_NUMBER' \
            -X 'github.com/SumoLogic-Labs/sumocli/internal/build.Date=$time'" \
            ./cmd/sumocli
        env:
          GOOS: darwin
          GOARCH: arm64
      - name: Install gon
        shell: bash
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon
      - name: Sign and Notarize Binary
        shell: bash
        run: |
          # Install signing certificate
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          echo -n "$APPLE_DEV_CERT" | base64 --decode --output $CERTIFICATE_PATH
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
          security import $CERTIFICATE_PATH -P $APPLE_DEV_CERT_PASSWORD -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Sign macOS build
          gon -log-level=info -log-json .github/workflows/config.json
        env:
          APPLE_DEV_CERT: ${{ secrets.APPLE_DEV_CERT }}
          APPLE_DEV_CERT_PASSWORD: ${{ secrets.APPLE_DEV_CERT_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_github_release.outputs.releaseurl }}
          asset_path: ./sumocli.zip
          asset_name: sumocli-macos-arm64.zip
          asset_content_type: application/zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: sumocli-macos-arm64
          path: ./sumocli
